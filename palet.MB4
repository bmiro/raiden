10 ''''''''''''''''''''''''Capçalera requerida a l'enunciat'''''''''''''''''''''''
20 def INTE GROC, BLANC, BLAU, VERMELL 
30 VERMELL = 1
40 BLANC = 2
50 GROC = 3
60 BLAU = 4

70 def INTE N 'veure variable pcsPila de la seccio de declaracions propies
80 N = 3
90 dim tipusP!(6) 
100 tipusP(1) = BLAU
110 tipusP(2) = BLANC
120 tipusP(3) = VERMELL
130 tipusP(4) = BLANC
140 tipusP(5) = BLAU
150 tipusP(6) = GROC

160 'coordenades x i y del punt P respecte la camera
170 def FLOAT oPx, oPy
180 oPx = 0.0
190 oPy = 0.0
200 'angle de rotació del palé respecte la camera
210 def FLOAT angle
220 angle = 240.0
230 'coordenades x i y de l’origen del sistema de la camera
240 def FLOAT cPx, cPy
250 cPx = 550.0
260 cPy = 0.0

270 ''''''''''''''''''''''''     Macros pròpies     ''''''''''''''''''''''''
280 def INTE PINCA
290 PINCA = 1

300 def FLOAT DPALE 'Delay despres de haver munta tel pale
310 DPALE = 4.0

320 def FLOAT DOPINCAI, DOPINCAF, DTPINCAI, DTPINCAF 'emps abans i despres per obrir/tancar pinça
330 DOPINCAI = 1.0 'Es important estar ben estatic el deixar
340 DOPINCAF = 0.5
350 DTPINCAI = 0.5
360 DTPINCAF = 0.5

370 def INTE VLENT, VNORMAL
380 VLENT = 10
390 VNORMAL = 30

400 def FLOAT ZS, ZTPT, ZTPR 'Pla Z on es desplaça el robot per sobre de la terra _real_
410 ZS = 280.0
420 ZTPT = ZS - 10.0 ' Pla de terra amb pinça tombada
430 ZTPR = ZS + 6.5  ' Pla de terra amb pinça recta


440 def INTE TP 'tipus de pença diferents
450 TP = 4

460 def INTE PILES 'Numero de pilaes inicials on hi ha les peces
470 PILES = 2

480 def INTE PALS 'Numero de pals
490 PALS = 4

500 def FLOAT DT 'Diferencial de temps per la pinça
510 DT = 0.5

520 def FLOAT HDISC 'Altura dels discs
530 HDISC = 17.5

540 'TODO documentar cap on intrementen les x i tot l'entorn, premises de colocacio etc.
550 def FLOAT DXPILES 'Distancia X entre les pilaes
560 DXPILES = 100.0
570 def FLOAT DYPILES 'Distancia Y entre les pilaes
580 DYPILES = 0.0
590 def FLOAT DXPALE  'Distancia X entre els punts del pale
600 DXPALE  = 110.0
610 def FLOAT DYPALE  'Distancia Y entre els punts del pale
620 DYPALE = 110.0
630 def FLOAT DXPALS  'Distancia X entre els pals
640 DXPALS  = 79.0
650 def FLOAT DYPALS  'Distancia Y entre els pals
660 DYPALS  = 0.0
670 def FLOAT DZPAL   'Distancia Z per entrar dins el pal
680 DZPAL  = 45.0

690 dim RELPALE# (4,2) '4 = TP, posicions relatives al centre per fer el palé (x, y)
700 RELPALE (1,1) = -55.0 
710 RELPALE (1,2) =  55.0
720 RELPALE (2,1) =  55.0 
730 RELPALE (2,2) =  55.0
740 RELPALE (3,1) =  55.0 
750 RELPALE (3,2) = -55.0
760 RELPALE (4,1) = -55.0 
770 RELPALE (4,2) = -55.0 

780 ''''''''''''''''''''''''     Declaracions pròpies     ''''''''''''''''''''''''
790 dim npcsPila!(2) '2 = PILES
800 npcsPila(1) = N+1
810 npcsPila(2) = N-1

820 dim ordre!(4) '4 = TP Ordre de recollida de les peces

830 dim alloc!(4) '4 = TP Tantes posicions com tipus de peça, les peces que ja estan a lloc

840 def POS Prvsnl 'Punt Provisional per calcul

850 dim Pale(4) '4 = TP, posicio segura sobra la columna d'on s'ha de posar la peça
860 dim PaleOut(4)
870 dim Pila(2) '2 = PILES posicio segura sobre la pila
880 dim PalI(4) ' 4 = PALS
890 dim PalF(4) ' 4 = PALS

900 def INTE i, pil, pal, munt, peca, pecapila, tipus 'iteradors

910 def FLOAT angleR
920 
930 def FLOAT ppx, ppy 'punt pale  ' emprats com a paramentres per el pals de 
940 def FLOAT prx, pry 'punt robot ' coorenades del pale al robot

950 ''''''''''''''''''''''''''''''''''   MAIN   '''''''''''''''''''''''''''''''''''
960 gosub *INIT
970 gosub *CALCPTS
980 gosub *MNTPALE
990 dly DPALE
1000 gosub *DESPALE
1010 gosub *ACABA
1020 end

1030 ''''''''''''''''''''''''''''''''    RUTINES   '''''''''''''''''''''''''''''''''
1040 *INIT
1050    servo ON
1060    ovrd VNORMAL
1070    mov Paralisi
1080    gosub *OPINCA
1090    for i = 1 to TP
1100        alloc(i) = 0
1110    next
1120    return

1130 *CALCPTS
1140    for pil = 1 to PILES
1150        Pila(pil) = Pila0
1160        Pila(pil).x = Pila(1).x + DXPILES * (pil - 1)
1170        Pila(pil).y = Pila(1).y + DYPILES * (pil - 1) 'es 0
1180    next
    
1200    for tipus = 1 to TP
1210        ppx = RELPALE(tipus, 1) 'paramentres de entrada de CAM2ROB
1220        ppy = RELPALE(tipus, 2)
1230        gosub *CAM2ROB           'prx i pry son parametres de sortida
1240        Pale(tipus) = Pale0    'Escriu altres components i orientacions
1250        Pale(tipus).x = prx
1260        Pale(tipus).y = pry
1270        PaleOut(tipus) = PaleOut0
1280        PaleOut(tipus).x = prx + 5.0
1290        PaleOut(tipus).y = pry -20.0
1300    next
 
1320    for pal = 1 to PALS
1330        PalI(pal) = Pal0
1340        PalI(pal).x = PalI(pal).x + DXPALS * (pal - 1)
1350        PalI(pal).y = PalI(pal).y + DYPALS * (pal - 1)
1360        PalF(pal) = PalI(pal)
1370        PalF(pal).z = PalF(pal).z - DZPAL
1380    next
1390 	
1400    angle = angle mod 360
1410 	if ((0.0 < angle) and (angle < 45.0)) then
1420        ordre(1) = 3
1430        ordre(2) = 2
1440        ordre(3) = 4
1450        ordre(4) = 1
1460		return
1470 	endif
1480  if ((45.0 < angle) and (angle < 90.0)) then 
1490        ordre(1) = 3
1500        ordre(2) = 4
1510        ordre(3) = 2
1520        ordre(4) = 1
1530 		return
1540 	endif
1550  if ((90.0 < angle) and (angle < 135.0)) then
1560        ordre(1) = 4
1570        ordre(2) = 3
1580        ordre(3) = 1
1590        ordre(4) = 2
1600 		return
1610 	endif
1620  if ((135.0 <= angle) and (angle < 180.0)) then
1630        ordre(1) = 4
1640        ordre(2) = 1
1650        ordre(3) = 3
1660        ordre(4) = 2
1670 		return
1680 	endif
1690  if ((180.0 <= angle) and (angle < 225.0)) then 
1700        ordre(1) = 1
1710        ordre(2) = 4
1720        ordre(3) = 2
1730        ordre(4) = 3
1740 		return
1750 	endif
1760  if ((225.0 <= angle) and (angle < 270.0)) then
1770        ordre(1) = 1
1780        ordre(2) = 2
1790        ordre(3) = 4
1800        ordre(4) = 3
1810 		return
1820 	endif
1830  if ((270.0 <= angle) and (angle < 315.0)) then 
1840        ordre(1) = 2
1850        ordre(2) = 1
1860        ordre(3) = 4
1870        ordre(4) = 3
1880 		return
1890 	endif
1900  ' 315.0 > angle < 360.0
1910  ordre(1) = 2
1920  ordre(2) = 3
1930  ordre(3) = 1
1940  ordre(4) = 4
1950  return

1960 *ACABA
1970    mov Paralisi
1980    hopen PINCA
1990    servo OFF
2000    return

2010 *CAM2ROB
2020 	angleR =(angle*M_PI) / 180.0
2030    prx = ppx*sin(angleR) + ppy*cos(angleR) + oPy + cPx
2040    pry = ppx*cos(angleR) - ppy*sin(angleR) + oPx + cPy
2050    return
    
2070 *OPINCA
2080    dly DOPINCAI
2090    hopen PINCA
2100    dly DOPINCAF
2110    return

2120 *TPINCA
2130    dly DTPINCAI
2140    hclose PINCA
2150    dly DTPINCAF
2160    return

2170 *MNTPALE
2180    peca = 1
2190    for pil = 1 to PILES 
2200        for pecapila = 1 to npcspila(pil)
2210            gosub *AGAFPILA
2220            gosub *POSAPALE
2230            peca = peca + 1
2240        next
2250    next
2260    return
    
2280 *DESPALE
2290    for tipus = 1 to TP
2300        munt = ordre(tipus)
2310        while alloc(munt) > 0
2320            gosub *AGAFPALE
2330            gosub *POSADEST
2340        wend
2350    next
2360    return

2370 *AGAFPILA
2380    mov Pila(pil)
2390    Prvsnl = Pila(pil)
2400    Prvsnl.z = Prvsnl.z - ZTPR + (npcspila!(pil) - pecapila) * HDISC
2410    ovrd VLENT
2420    mvs Prvsnl
2430    gosub *TPINCA
2440    mvs Pila(pil)
2450    ovrd VNORMAL
2460    return

2470 *POSAPALE
2480    mov Pale(tipusP(peca))
2490    Prvsnl = Pale(tipusP(peca))
2500    Prvsnl.z = Prvsnl.z - ZTPR + alloc(tipusP(peca)) * HDISC
2510    ovrd VLENT
2520    mvs Prvsnl
2530    gosub *OPINCA
2540    mvs Pale(tipusP(peca))
2550    ovrd VNORMAL
2560    alloc(tipusP(peca)) = alloc(tipusP(peca)) + 1
2570    return

2580 *AGAFPALE
2590    mov PaleOut(munt)
2600    Prvsnl = PaleOut(munt)
2610    Prvsnl.z = Prvsnl.z - ZTPT + (alloc(munt) - 1) * HDISC
2620    ovrd VLENT
2630    mvs Prvsnl
2640    gosub *TPINCA
2650    mvs PaleOut(munt)
2660    ovrd VNORMAL
2670    alloc(munt) = alloc(munt) - 1
2680    return

2690 *POSADEST
2700    mov PalI(munt)
2710    ovrd VLENT
2720    mvs PalF(munt)
2730    gosub *OPINCA
2740    mvs PalI(munt)
2750    ovrd VNORMAL
2760 	return
