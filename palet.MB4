10 ''''''''''''''''''''''''Capçalera requerida a l'enunciat'''''''''''''''''''''''
20 tool(0,0,190,0,0,0)
30 def INTE GROC, BLANC, BLAU, VERMELL 
40 VERMELL = 1
50 BLANC = 2
60 GROC = 3
70 BLAU = 4

80 def INTE N 'veure variable pcsPila de la seccio de declaracions propies
90 N = 3
100 dim tipusP!(6) 
110 tipusP(1) = BLAU
120 tipusP(2) = BLANC
130 tipusP(3) = VERMELL
140 tipusP(4) = BLANC
150 tipusP(5) = BLAU
160 tipusP(6) = GROC

170 'coordenades x i y del punt P respecte la camera
180 def FLOAT oPx, oPy
190 oPx = 0.0
200 oPy = 0.0
210 'angle de rotació del palé respecte la camera
220 def FLOAT angle
230 angle = 133.0
240 'coordenades x i y de l’origen del sistema de la camera
250 def FLOAT cPx, cPy
260 cPx = 550.0
270 cPy = 0.0

280 ''''''''''''''''''''''''     Macros pròpies     ''''''''''''''''''''''''
290 def INTE PINCA
300 PINCA = 1

310 def FLOAT DPALE 'Delay despres de haver munta tel pale
320 DPALE = 4.0

330 def FLOAT DOPINCAI, DOPINCAF, DTPINCAI, DTPINCAF 'emps abans i despres per obrir/tancar pinça
340 DOPINCAI = 1.0 'Es important estar ben estatic el deixar
350 DOPINCAF = 0.5
360 DTPINCAI = 0.5
370 DTPINCAF = 0.5

380 def INTE VLENT, VNORMAL
390 VLENT = 10
400 VNORMAL = 30

410 def FLOAT ZS, ZTPT, ZTPR 'Pla Z on es desplaça el robot per sobre de la terra _real_
420 ZS = 280.0
430 ZTPT = ZS - 10.0 ' Pla de terra amb pinça tombada
440 ZTPR = ZS + 6.5  ' Pla de terra amb pinça recta


450 def INTE TP 'tipus de pença diferents
460 TP = 4

470 def INTE PILES 'Numero de pilaes inicials on hi ha les peces
480 PILES = 2

490 def INTE PALS 'Numero de pals
500 PALS = 4

510 def FLOAT DT 'Diferencial de temps per la pinça
520 DT = 0.5

530 def FLOAT HDISC 'Altura dels discs
540 HDISC = 17.5

550 'TODO documentar cap on intrementen les x i tot l'entorn, premises de colocacio etc.
560 def FLOAT DXPILES 'Distancia X entre les pilaes
570 DXPILES = 100.0
580 def FLOAT DYPILES 'Distancia Y entre les pilaes
590 DYPILES = 0.0
600 def FLOAT DXPALE  'Distancia X entre els punts del pale
610 DXPALE  = 110.0
620 def FLOAT DYPALE  'Distancia Y entre els punts del pale
630 DYPALE = 110.0
640 def FLOAT DXPALS  'Distancia X entre els pals
650 DXPALS  = 79.0
660 def FLOAT DYPALS  'Distancia Y entre els pals
670 DYPALS  = 0.0
680 def FLOAT DZPAL   'Distancia Z per entrar dins el pal
690 DZPAL  = 45.0

700 dim RELPALE# (4,2) '4 = TP, posicions relatives al centre per fer el palé (x, y)
710 RELPALE (1,1) = -55.0 
720 RELPALE (1,2) =  55.0
730 RELPALE (2,1) =  55.0 
740 RELPALE (2,2) =  55.0
750 RELPALE (3,1) =  55.0 
760 RELPALE (3,2) = -55.0
770 RELPALE (4,1) = -55.0 
780 RELPALE (4,2) = -55.0 

790 ''''''''''''''''''''''''     Declaracions pròpies     ''''''''''''''''''''''''
800 dim npcsPila!(2) '2 = PILES
810 npcsPila(1) = N+1
820 npcsPila(2) = N-1

830 dim ordre!(4) '4 = TP Ordre de recollida de les peces

840 dim alloc!(4) '4 = TP Tantes posicions com tipus de peça, les peces que ja estan a lloc

850 def POS Prvsnl 'Punt Provisional per calcul

860 dim Pale(4) '4 = TP, posicio segura sobra la columna d'on s'ha de posar la peça
870 dim PaleOut(4)
880 dim Pila(2) '2 = PILES posicio segura sobre la pila
890 dim PalI(4) ' 4 = PALS
900 dim PalF(4) ' 4 = PALS

910 def INTE i, pil, pal, munt, peca, pecapila, tipus 'iteradors

920 def FLOAT angleR
930 
940 def FLOAT ppx, ppy 'punt pale  ' emprats com a paramentres per el pals de 
950 def FLOAT prx, pry 'punt robot ' coorenades del pale al robot

960 ''''''''''''''''''''''''''''''''''   MAIN   '''''''''''''''''''''''''''''''''''
970 gosub *INIT
980 gosub *CALCPTS
990 gosub *MNTPALE
1000 dly DPALE
1010 gosub *DESPALE
1020 gosub *ACABA
1030 end

1040 ''''''''''''''''''''''''''''''''    RUTINES   '''''''''''''''''''''''''''''''''
1050 *INIT
1060    servo ON
1070    ovrd VNORMAL
1080    mov Paralisi
1090    gosub *OPINCA
1100    for i = 1 to TP
1110        alloc(i) = 0
1120    next
1130    return

1140 *CALCPTS
1150    for pil = 1 to PILES
1160        Pila(pil) = Pila0
1170        Pila(pil).x = Pila(1).x + DXPILES * (pil - 1)
1180        Pila(pil).y = Pila(1).y + DYPILES * (pil - 1) 'es 0
1190    next
    
1210    for tipus = 1 to TP
1220        ppx = RELPALE(tipus, 1) 'paramentres de entrada de CAM2ROB
1230        ppy = RELPALE(tipus, 2)
1240        gosub *CAM2ROB           'prx i pry son parametres de sortida
1250        Pale(tipus) = Pale0    'Escriu altres components i orientacions
1260        Pale(tipus).x = prx
1270        Pale(tipus).y = pry
1280        PaleOut(tipus) = PaleOut0
1290        PaleOut(tipus).x = prx '- 7.0
1300        PaleOut(tipus).y = pry - 15.0
1310    next
 
1330    for pal = 1 to PALS
1340        PalI(pal) = Pal0
1350        PalI(pal).x = PalI(pal).x + DXPALS * (pal - 1)
1360        PalI(pal).y = PalI(pal).y + DYPALS * (pal - 1)
1370        PalF(pal) = PalI(pal)
1380        PalF(pal).z = PalF(pal).z - DZPAL
1390    next
1400 	
1410    angle = angle mod 360
1420 	if ((0.0 < angle) and (angle < 45.0)) then
1430        ordre(1) = 3
1440        ordre(2) = 2
1450        ordre(3) = 4
1460        ordre(4) = 1
1470		return
1480 	endif
1490  if ((45.0 < angle) and (angle < 90.0)) then 
1500        ordre(1) = 3
1510        ordre(2) = 4
1520        ordre(3) = 2
1530        ordre(4) = 1
1540 		return
1550 	endif
1560  if ((90.0 < angle) and (angle < 135.0)) then
1570        ordre(1) = 4
1580        ordre(2) = 3
1590        ordre(3) = 1
1600        ordre(4) = 2
1610 		return
1620 	endif
1630  if ((135.0 <= angle) and (angle < 180.0)) then
1640        ordre(1) = 4
1650        ordre(2) = 1
1660        ordre(3) = 3
1670        ordre(4) = 2
1680 		return
1690 	endif
1700  if ((180.0 <= angle) and (angle < 225.0)) then 
1710        ordre(1) = 1
1720        ordre(2) = 4
1730        ordre(3) = 2
1740        ordre(4) = 3
1750 		return
1760 	endif
1770  if ((225.0 <= angle) and (angle < 270.0)) then
1780        ordre(1) = 1
1790        ordre(2) = 2
1800        ordre(3) = 4
1810        ordre(4) = 3
1820 		return
1830 	endif
1840  if ((270.0 <= angle) and (angle < 315.0)) then 
1850        ordre(1) = 2
1860        ordre(2) = 1
1870        ordre(3) = 4
1880        ordre(4) = 3
1890 		return
1900 	endif
1910  ' 315.0 > angle < 360.0
1920  ordre(1) = 2
1930  ordre(2) = 3
1940  ordre(3) = 1
1950  ordre(4) = 4
1960  return

1970 *ACABA
1980    mov Paralisi
1990    hopen PINCA
2000    servo OFF
2010    return

2020 *CAM2ROB
2030 	angleR =(angle*M_PI) / 180.0
2040    prx = ppx*sin(angleR) + ppy*cos(angleR) + oPy + cPx
2050    pry = ppx*cos(angleR) - ppy*sin(angleR) + oPx + cPy
2060    return
    
2080 *OPINCA
2090    dly DOPINCAI
2100    hopen PINCA
2110    dly DOPINCAF
2120    return

2130 *TPINCA
2140    dly DTPINCAI
2150    hclose PINCA
2160    dly DTPINCAF
2170    return

2180 *MNTPALE
2190    peca = 1
2200    for pil = 1 to PILES 
2210        for pecapila = 1 to npcspila(pil)
2220            gosub *AGAFPILA
2230            gosub *POSAPALE
2240            peca = peca + 1
2250        next
2260    next
2270    return
    
2290 *DESPALE
2300    for tipus = 1 to TP
2310        munt = ordre(tipus)
2320        while alloc(munt) > 0
2330            gosub *AGAFPALE
2340            gosub *POSADEST
2350        wend
2360    next
2370    return

2380 *AGAFPILA
2390    mov Pila(pil)
2400    Prvsnl = Pila(pil)
2410    Prvsnl.z = Prvsnl.z - ZTPR + (npcspila!(pil) - pecapila) * HDISC
2420    ovrd VLENT
2430    mvs Prvsnl
2440    gosub *TPINCA
2450    mvs Pila(pil)
2460    ovrd VNORMAL
2470    return

2480 *POSAPALE
2490    mov Pale(tipusP(peca))
2500    Prvsnl = Pale(tipusP(peca))
2510    Prvsnl.z = Prvsnl.z - ZTPR + alloc(tipusP(peca)) * HDISC
2520    ovrd VLENT
2530    mvs Prvsnl
2540    gosub *OPINCA
2550    mvs Pale(tipusP(peca))
2560    ovrd VNORMAL
2570    alloc(tipusP(peca)) = alloc(tipusP(peca)) + 1
2580    return

2590 *AGAFPALE
2600    mov PaleOut(munt)
2610    Prvsnl = PaleOut(munt)
2620    Prvsnl.z = Prvsnl.z - ZTPT + (alloc(munt) - 1) * HDISC
2630    ovrd VLENT
2640    mvs Prvsnl
2650    gosub *TPINCA
2660    mvs PaleOut(munt)
2670    ovrd VNORMAL
2680    alloc(munt) = alloc(munt) - 1
2690    return

2700 *POSADEST
2710    mov PalI(munt)
2720    ovrd VLENT
2730    mvs PalF(munt)
2740    gosub *OPINCA
2750    mvs PalI(munt)
2760    ovrd VNORMAL
2770 	return
